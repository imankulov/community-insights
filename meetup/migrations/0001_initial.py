# Generated by Django 2.1.4 on 2018-12-29 11:51

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='APICredentials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(max_length=1000)),
                ('expires_at', models.DateTimeField()),
                ('refresh_token', models.CharField(max_length=1000)),
            ],
            options={
                'verbose_name': 'API credentials',
                'verbose_name_plural': 'API credentials',
            },
        ),
        migrations.CreateModel(
            name='MeetupCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shortname', models.CharField(max_length=1000, unique=True)),
                ('name', models.CharField(max_length=1000, unique=True)),
            ],
            options={
                'verbose_name': 'Meetup category',
                'verbose_name_plural': 'Meetup categories',
            },
        ),
        migrations.CreateModel(
            name='MeetupGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('status', models.CharField(max_length=1000)),
                ('urlname', models.CharField(db_index=True, max_length=200)),
                ('description', models.TextField()),
                ('created', models.DateTimeField()),
                ('city', models.CharField(max_length=1000)),
                ('untranslated_city', models.CharField(max_length=1000)),
                ('country', models.CharField(max_length=1000)),
                ('state', models.CharField(max_length=1000)),
                ('join_mode', models.CharField(max_length=1000)),
                ('visibility', models.CharField(max_length=1000)),
                ('lat', models.FloatField(max_length=1000)),
                ('lon', models.FloatField(max_length=1000)),
                ('members', models.PositiveIntegerField()),
                ('who', models.CharField(max_length=1000)),
                ('organizer_id', models.PositiveIntegerField()),
                ('organizer_name', models.CharField(max_length=1000)),
                ('timezone', models.CharField(max_length=1000)),
                ('next_event_id', models.CharField(max_length=1000, null=True)),
                ('next_event_name', models.CharField(max_length=1000, null=True)),
                ('next_event_yes_rsvp_count', models.PositiveIntegerField(null=True)),
                ('next_event_time', models.DateTimeField(null=True)),
                ('category_id', models.PositiveIntegerField()),
                ('category_shortname', models.CharField(max_length=1000)),
                ('meta_category_id', models.PositiveIntegerField()),
                ('meta_category_shortname', models.CharField(max_length=1000)),
                ('members_next_update', models.DateTimeField(default=datetime.datetime(2000, 1, 1, 0, 0, tzinfo=utc))),
            ],
        ),
        migrations.CreateModel(
            name='MeetupGroupFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(db_index=True, default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meetup.MeetupCategory')),
            ],
        ),
        migrations.CreateModel(
            name='MeetupGroupMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=1000)),
                ('visited', models.DateTimeField()),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField()),
                ('role', models.CharField(max_length=1000, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meetup.MeetupGroup')),
            ],
        ),
        migrations.CreateModel(
            name='MeetupLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=10)),
                ('location', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='MeetupUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('status', models.CharField(max_length=1000)),
                ('joined', models.DateTimeField()),
                ('city', models.CharField(max_length=1000)),
                ('country', models.CharField(max_length=1000)),
                ('lat', models.FloatField()),
                ('lon', models.FloatField()),
                ('is_pro_admin', models.BooleanField(default=False)),
                ('messaging_pref', models.CharField(max_length=1000)),
                ('privacy_bio', models.CharField(max_length=1000)),
                ('privacy_groups', models.CharField(max_length=1000)),
                ('privacy_topics', models.CharField(max_length=1000)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='meetuplocation',
            unique_together={('country', 'location')},
        ),
        migrations.AddField(
            model_name='meetupgroupmember',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meetup.MeetupUser'),
        ),
        migrations.AddField(
            model_name='meetupgroupfilter',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meetup.MeetupLocation'),
        ),
        migrations.AddIndex(
            model_name='meetupgroup',
            index=models.Index(fields=['members_next_update', 'visibility'], name='meetup_meet_members_7c44d6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='meetupgroupfilter',
            unique_together={('category', 'location')},
        ),
    ]
